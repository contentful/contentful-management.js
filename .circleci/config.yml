version: 2.1
orbs:
  vault: contentful/vault@1
  node: circleci/node@5.2.0

executors:
  docker-with-node:
    docker:
      - image: cimg/node:18.19
    working_directory: ~/build-and-test

commands:
  install-dependencies:
    steps:
      - restore_cache:
          keys:
            - npm-cache-{{ arch }}-{{ checksum ".nvmrc" }}-{{ checksum "package-lock.json" }}
            - npm-cache
      - vault/get-secrets:
          template-preset: 'packages-read'
      - run: echo "//npm.pkg.github.com/:_authToken=${GITHUB_PACKAGES_READ_TOKEN}" > ~/.npmrc
      - run: echo "@contentful:registry=https://npm.pkg.github.com" >> ~/.npmrc
      - run: npm ci --prefer-offline

  cache-dependencies:
    steps:
      - save_cache:
          key: npm-cache-{{ arch }}-{{ checksum ".nvmrc" }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  persist-workspace:
    steps:
      - persist_to_workspace:
          root: .
          paths:
            - .

  with-workspace:
    steps:
      - attach_workspace:
          at: ~/build-and-test

  use-vault:
    steps:
      - vault/get-secrets:
          template-preset: 'semantic-release-ecosystem'
      - run: echo "//npm.pkg.github.com/:_authToken=${GITHUB_PACKAGES_WRITE_TOKEN}" > ~/.npmrc
      - run: echo "@contentful:registry=https://npm.pkg.github.com" >> ~/.npmrc

jobs:
  prepare:
    executor: docker-with-node
    steps:
      - checkout
      - run: node --version
      - install-dependencies
      - persist-workspace

  build:
    executor: docker-with-node
    steps:
      - with-workspace
      - run: npm run build

  lint:
    executor: docker-with-node
    steps:
      - with-workspace
      - run: npm run prettier:check
      - run: npm run lint
      - run: npm run check-types

  unit:
    executor: docker-with-node
    steps:
      - with-workspace
      - run: npm run test:cover-unit
      - store_test_results:
          path: reports
      - store_artifacts:
          path: ./reports/unit-results.xml

  integration:
    executor: docker-with-node
    steps:
      - with-workspace
      - run: npm run test:cover-integration
      - store_test_results:
          path: reports
      - store_artifacts:
          path: ./reports/integration-results.xml

  # Do not use the workspace for the release step
  release:
    executor: docker-with-node
    steps:
      - checkout
      - install-dependencies
      - use-vault
      - run: npm run semantic-release

workflows:
  version: 2
  build_and_test:
    jobs:
      - prepare:
          context: vault
      - build:
          requires:
            - prepare
      - lint:
          requires:
            - prepare
      - unit:
          requires:
            - prepare
      - integration:
          requires:
            - prepare
            - build
            - unit
            - lint

      - release:
          context: vault
          requires:
            - prepare
            - build
            - unit
            - lint
            - integration
          filters:
            branches:
              only:
                - master
                - beta
